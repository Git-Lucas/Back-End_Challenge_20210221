name: .NET CD EC2

on:
  push:
    branches: [ "master" ]

jobs:
  ec2:
    runs-on: ubuntu-latest

    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clone Terraform and Ansible Repository
      run: git clone https://github.com/Git-Lucas/Terraform_Ansible_BackEndChallenge.git

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: 1.10.4

    - name: Initialize Terraform
      run: terraform -chdir=Terraform_Ansible_BackEndChallenge init

    - name: Apply Terraform
      id: terraform_apply
      run: |
        terraform -chdir=Terraform_Ansible_BackEndChallenge apply -auto-approve
        echo "$(terraform -chdir=Terraform_Ansible_BackEndChallenge output -raw instance_public_ip)"

    - name: Wait for EC2 health check
      run: |
        INSTANCE_IP="${{ steps.terraform_apply.outputs.stdout }}"
        echo "Waiting for EC2 instance $INSTANCE_IP to pass health checks..."
        for i in {1..30}; do
          nc -zv $INSTANCE_IP 22 && echo "Instance is healthy and SSH is available!" && exit 0
          echo "Waiting for instance to be ready... Retry $i of 30"
          sleep 10
        done
        echo "EC2 instance did not pass health check in time." >&2
        exit 1

    - name: Create SSH directory
      run: mkdir -p ~/.ssh

    - name: Add SSH private key
      run: |
        echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy with Ansible
      run: ansible-playbook -i "${{ steps.terraform_apply.outputs.stdout }}," -u ubuntu Terraform_Ansible_BackEndChallenge/playbook.yml --private-key ~/.ssh/id_rsa
      env:
        ANSIBLE_HOST_KEY_CHECKING: "false"

    - name: Destroy Terraform
      run: terraform -chdir=Terraform_Ansible_BackEndChallenge destroy -auto-approve